module Examples where


open import Data.String hiding (show)
open import Data.Nat.Show
open import Data.List hiding (_++_)
open import Data.Nat as N
open import Data.Product using (_,_)

open import Syntax
open import AssocList ‚Ñï N._‚âü_ as AL
open import Unification
open import W
open import Print

--------------------------------------------------------------------------------
--

id : Expr
id = `Œª 0 (` 0)

hmm =
  let
    (S , œÑ) = ùí≤ Œµ id
  in gen (subst'Œì S Œµ) œÑ

pfft = print hmm
--------------------------------------------------------------------------------


